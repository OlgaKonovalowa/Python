# Python
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. 
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def div(*args):

    try:
        arg_1 = int(input("Введите делимое "))
        arg_2 = int(input("Введите делитель "))
        res = arg_1 / arg_2
    except ValueError:
        return 'Value error'
    except ZeroDivisionError:
        return "Деление на ноль невозможно"

    return res


print(f'result  {div()}')

2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы.
Реализовать вывод данных о пользователе одной строкой.

input('Введите имя')
surname = input('Введите фамилию')
year = int(input('Введите год рождения'))
city = input('Введите город проживания')
email = input('Введите адрес электронной почты')
phone_number = input('Введите номер телефона')

def my_func (name, surname, year, city, email, phone_number):
     return ' '.join([name, surname, year, city, email, phone_number])
print(my_func(name = 'Ольга', surname = 'Коновалова', year = '1989', city = 'Москва', email = 'geek@mail.ru', phone_number = '8-903-903-90-03'))


3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, 
и возвращает сумму наибольших двух аргументов.

def my_func(arg_1, arg_2, arg_3):
    if arg_1 >= arg_3 and arg_2 >= arg_3:
        return arg_1 + arg_2
    elif arg_1 > arg_2 and arg_1 < arg_3:
        return arg_1 + arg_3
    else:
        return arg_2 + arg_3

print(f'Result - {my_func(int(input("Введите первый аргумент")), int(input("Введите второй аргумент")), int(input("Введите третий аргумент"



4. Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y.
Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

** Подсказка:** попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
 Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x, y):
    return x ** y

print(my_func(4, 2))


5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def my_sum ():
    sum_res = 0
    ex = False
    while ex == False:
        number = input('Ведите числа через пробел или F  чтобы выйти').split()

        res = 0
        for el in range(len(number)):
            if number[el] == 'f' or number[el] == 'F':
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f'сумма равно  {sum_res}')
    print(f'Ваша итоговая сумма равна {sum_res}')

my_sum()


6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием.
В программу должна попадать строка из слов, разделенных пробелом.
Каждое слово состоит из латинских букв в нижнем регистре. 
Cделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func().

def int_func (*args):
    word = input("Введите фразу")
    print(word.title())
    return
int_func()
